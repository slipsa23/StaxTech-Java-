 import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.security.SecureRandom;

public class password extends JFrame implements ActionListener {

    private JTextField lengthField;
    private JCheckBox upperCheck, lowerCheck, numberCheck, symbolCheck;
    private JTextArea resultArea;
    private final String upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private final String lower = "abcdefghijklmnopqrstuvwxyz";
    private final String numbers = "0123456789";
    private final String symbols = "!@#$%^&*()-_=+<>?/";

    public @Override
    void pack(){
        super.pack();
    }password() {
        setTitle("Password Generator");
        setSize(400, 300);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        JPanel inputPanel = new JPanel(new GridLayout(6, 1));
        lengthField = new JTextField();
        inputPanel.add(new JLabel("Password Length:"));
        inputPanel.add(lengthField);

        upperCheck = new JCheckBox("Include Uppercase Letters");
        lowerCheck = new JCheckBox("Include Lowercase Letters");
        numberCheck = new JCheckBox("Include Numbers");
        symbolCheck = new JCheckBox("Include Special Characters");

        inputPanel.add(upperCheck);
        inputPanel.add(lowerCheck);
        inputPanel.add(numberCheck);
        inputPanel.add(symbolCheck);

        JButton generateButton = new JButton("Generate Password");
        generateButton.addActionListener(this);

        resultArea = new JTextArea();
        resultArea.setEditable(false);
        resultArea.setFont(new Font("Monospaced", Font.BOLD, 16));
        JScrollPane scrollPane = new JScrollPane(resultArea);

        add(inputPanel, BorderLayout.NORTH);
        add(generateButton, BorderLayout.CENTER);
        add(scrollPane, BorderLayout.SOUTH);

        setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        int length;
        try {
            length = Integer.parseInt(lengthField.getText());
            if (length < 4) throw new NumberFormatException();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Please enter a valid length (minimum 4).");
            return;
        }

        String charSet = "";
        if (upperCheck.isSelected()) charSet += upper;
        if (lowerCheck.isSelected()) charSet += lower;
        if (numberCheck.isSelected()) charSet += numbers;
        if (symbolCheck.isSelected()) charSet += symbols;

        if (charSet.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select at least one character type.");
            return;
        }

        SecureRandom random = new SecureRandom();
        StringBuilder password = new StringBuilder();

        for (int i = 0; i < length; i++) {
            int index = random.nextInt(charSet.length());
            password.append(charSet.charAt(index));
        }

        resultArea.setText("Generated Password:\n" + password.toString());
    }

    public static void main(String[] args) {
        new password();
    }
}
